import pandas as pd
import matplotlib.pyplot as plt
from scipy.signal import find_peaks

# Load the CSV file generated by your code
df = pd.read_csv("./output/Sub_14_output.csv")
# df = pd.read_csv("./output/Sub_1_front_nomask_1_30fps_2023-06-30 19_30_00_output.csv")

# Plot DC signal
# plt.plot(df['R'], label='R', color='red')
# plt.plot(df['DC_red'], label='DC_red')

# plt.plot(df['G'], label='G', color='red')
# plt.plot(df['DC_green'], label='DC_green')

# plt.plot(df['B'], label='B', color='red')
# plt.plot(df['DC_blue'], label='DC_blue')
#######################################################

plt.plot(df['AC_red'], label='AC_red')
# plt.plot(df['AC_red_filtered'], label='AC_red_filtered')

# plt.plot(df['AC_blue'], label='AC_blue')
# plt.plot(df['AC_blue_filtered'], label='AC_blue_filtered')

# plt.plot(df['AC_green'], label='AC_green')
# plt.plot(df['AC_green_filtered'], label='AC_green_filtered')

# plt.plot(df['RR'], label='RR')

# plt.plot(df['SPO2'], label='SPO2', color='blue')
# plt.plot(df['GT'], label='GT')

# Find peaks in the AC_red signal
# peaks, _ = find_peaks(df['AC_red'])
# peaks, _ = find_peaks(df['AC_red_filtered'])
# peaks, _ = find_peaks(df['AC_blue_filtered'])
# peaks, _ = find_peaks(df['AC_green_filtered'])

# Annotate peaks on the plot
# plt.scatter(peaks, df['AC_red_filtered'][peaks], color='red', marker='x', label='Peaks')
# plt.scatter(peaks, df['AC_blue_filtered'][peaks], color='blue', marker='x', label='Peaks')
# plt.scatter(peaks, df['AC_green_filtered'][peaks], color='green', marker='x', label='Peaks')

# Customize plot
plt.xlabel('Frame Count')
plt.ylabel('Color Value')
# plt.title('R and DC_red')
# plt.title('G and DC_green')
# plt.title('B and DC_blue')

# plt.title('AC_red')
# plt.title('AC_blue')
# plt.title('AC_green')
# plt.title('')
plt.legend()
plt.show()

# import pandas as pd
# import matplotlib.pyplot as plt
# from scipy.signal import find_peaks

# # Load the CSV file generated by your code
# df = pd.read_csv("./output/Sub_1_output.csv")

# # Filter data based on SPO2 values
# filtered_df = df[(df['SPO2'] >= 95) & (df['SPO2'] < 100)]

# # Plot the filtered SPO2 data
# plt.plot(filtered_df['SPO2'], label='SPO2', color='blue')
# plt.plot(df['GT'], label='GT')

# # Customize plot
# plt.xlabel('Frame Count')
# plt.ylabel('SPO2')
# plt.title('Filtered SPO2 Data')
# plt.legend()
# plt.show()
